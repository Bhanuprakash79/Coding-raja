import java.util.ArrayList;
import java.util.List;

class Book {
    private int bookId;
    private String title;
    private String author;
    private boolean isAvailable;

    public Book(int bookId, String title, String author) {
        this.bookId = bookId;
        this.title = title;
        this.author = author;
        this.isAvailable = true;
    }

    public int getBookId() {
        return bookId;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void borrowBook() {
        isAvailable = false;
    }

    public void returnBook() {
        isAvailable = true;
    }
}

class Patron {
    private int patronId;
    private String name;
    private List<Integer> borrowedBooks;

    public Patron(int patronId, String name) {
        this.patronId = patronId;
        this.name = name;
        this.borrowedBooks = new ArrayList<>();
    }

    public int getPatronId() {
        return patronId;
    }

    public String getName() {
        return name;
    }

    public List<Integer> getBorrowedBooks() {
        return borrowedBooks;
    }

    public void borrowBook(int bookId) {
        borrowedBooks.add(bookId);
    }

    public void returnBook(int bookId) {
        borrowedBooks.remove((Integer) bookId);
    }
}

public class LibraryManagementSystem {
    public static void main(String[] args) {
        List<Book> books = new ArrayList<>();
        List<Patron> patrons = new ArrayList<>();

        // Adding books to the library
        books.add(new Book(1, "Book 1", "Author 1"));
        books.add(new Book(2, "Book 2", "Author 2"));
        books.add(new Book(3, "Book 3", "Author 3"));

        // Adding patrons
        patrons.add(new Patron(101, "Patron 1"));
        patrons.add(new Patron(102, "Patron 2"));

        // Simulating book borrowing and returning
        patrons.get(0).borrowBook(1);
        books.get(0).borrowBook();
        patrons.get(0).returnBook(1);
        books.get(0).returnBook();

        // Displaying book availability
        for (Book book : books) {
            System.out.println("Book ID: " + book.getBookId());
            System.out.println("Title: " + book.getTitle());
            System.out.println("Author: " + book.getAuthor());
            System.out.println("Available: " + book.isAvailable());
            System.out.println();
        }

        // Displaying patron's borrowed books
        for (Patron patron : patrons) {
            System.out.println("Patron ID: " + patron.getPatronId());
            System.out.println("Name: " + patron.getName());
            System.out.println("Borrowed Books: " + patron.getBorrowedBooks());
            System.out.println();
        }
    }
}